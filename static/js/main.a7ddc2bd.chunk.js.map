{"version":3,"sources":["firebase.js","App.jsx","serviceWorker.js","index.js"],"names":["firebase__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","firebase__WEBPACK_IMPORTED_MODULE_0___default","n","_firebaseConfig_json__WEBPACK_IMPORTED_MODULE_1__","firebase","initializeApp","config","playerX","shiftX","document","documentElement","clientWidth","playerY","shiftY","clientHeight","intersectRect","r1","r2","left","right","top","bottom","Player","x","y","angle","Object","C_Projects_UniversalProjects_JSON_Interpreter_data_handler_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","this","radius","shiftAngle","v","attacking","attackCounter","controller","forward","back","drawX","drawY","mouse","Math","atan","PI","direction","_this","atAngle","cos","sin","updateAngle","ctx","move","fillStyle","beginPath","arc","fill","stroke","closePath","attackDistance","abs","Server","data","hostname","area","version","uptime","width","height","health","concat","fillRect","rect","font","fillText","Canvas","_this2","C_Projects_UniversalProjects_JSON_Interpreter_data_handler_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Projects_UniversalProjects_JSON_Interpreter_data_handler_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","updateCanvas","bind","C_Projects_UniversalProjects_JSON_Interpreter_data_handler_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","refs","canvas","getContext","canvasRect","getBoundingClientRect","player","servers","numOfAddedServers","props","sort","a","b","currentArea","length","areaShift","healing","i","xWithoutShift","floor","obj","clearRect","minServer","minDistance","Number","MAX_SAFE_INTEGER","window","innerWidth","innerHeight","_arr","values","_i","server","getPunchingHand","getRect","destroyedServer","draw","sqrt","pow","style","backgroundColor","random","toString","requestAnimationFrame","_this3","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","ref","onMouseMove","e","clientX","clientY","transition","Component","App","_this4","checkOrientation","createGraphData","isNaN","parseInt","state","columnDefs","headerName","field","checkboxSelection","editable","orientation","graph_revision","authenticated","curUser","accessCode","fieldEditerIsOpen","fieldRemoverIsOpen","dataEditorIsOpen","dataRemoverIsOpen","selectorIsOpen","shareCodeIsOpen","joinCodeIsOpen","selectorTab","cachedExpression","dataIndex","addEventListener","activeElement","tagName","keyCode","canvasComponent","attack","removeEventListener","setState","xs","ys","ys2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","includes","indexOf","push","err","return","console","log","j","tempX","splice","tempY","tempY2","type","name","marker","color","s","dataCopy","C_Projects_UniversalProjects_JSON_Interpreter_data_handler_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getIndexByHostname","deleteServer","_this5","navigator","userAgent","match","className","ag_grid_react__WEBPACK_IMPORTED_MODULE_9__","enableSorting","enableFilter","rowSelection","rowDragManaged","rowData","onGridReady","params","gridApi","api","columnApi","Fragment","reactstrap__WEBPACK_IMPORTED_MODULE_8__","dark","expand","cursor","fontSize","userSelect","navbar","nav","inNavbar","caret","onClick","selectedData","getSelectedRows","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","d","borderRight","deselectAll","disabled","database","uid","once","snap","val","snapshot","recreateServers","alert","set","fileSelector","setAttribute","onchange","event","fileReader","FileReader","onload","fileContents","target","result","JSON","parse","readAsText","files","body","appendChild","click","removeChild","csv","replace","csvData","jsonData","keys","toLowerCase","readAsBinaryString","blob","Blob","stringify","url","URL","createObjectURL","display","exportDataAsCsv","fileName","plot","el","getElementsByClassName","refreshCells","marginRight","overflow","textAlign","margin","padding","provider","auth","GoogleAuthProvider","signInWithPopup","then","user","on","r","substring","catch","src","photoURL","alt","borderRadius","displayName","email","signOut","position","animateRows","enableCellChangeFlash","getRowNodeId","onRowSelected","shouldRun","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","onCellEditingStopped","updateData","react_plotly_js__WEBPACK_IMPORTED_MODULE_12___default","revision","responsive","layout","title","size","isOpen","onSubmit","preventDefault","getElementById","addServer","id","defaultValue","hostnames","split","key","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","arr","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","join","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","forEachNode","node","setSelected","expression","replacedExpression","eval","tabs","activeTab","tabId","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","fontWeight","fontStyle","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","code","Boolean","location","ReactDOM","render","react_default","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7ddc2bd.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport config from './firebaseConfig.json'\r\nfirebase.initializeApp(config);\r\nexport default firebase","import React, { Component } from 'react';\n\nimport { TabContent, TabPane, Navbar, NavbarBrand, Nav, NavItem, NavLink, DropdownToggle, UncontrolledDropdown, DropdownMenu, DropdownItem, Modal, ModalBody, ModalHeader, ModalFooter, Form, FormGroup, FormText, Button, Label, Input } from 'reactstrap';\n\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-dark.css';\n\nimport Plot from 'react-plotly.js';\n\nimport csv from 'csv';\n\nimport data from './data/data.json'\n\nimport firebase from './firebase.js'\n\nlet playerX = 0;\nfunction shiftX() {\n    return 0.2*document.documentElement.clientWidth - playerX;\n}\n\nlet playerY = 0;\nfunction shiftY() {\n    return .25*document.documentElement.clientHeight - playerY;\n}\n\nfunction intersectRect(r1, r2) {\n    return !(r2.left > r1.right || \n             r2.right < r1.left || \n             r2.top > r1.bottom ||\n             r2.bottom < r1.top);\n  }\n\nclass Player {\n    \n    constructor(x, y, angle) {\n        this.x = x;\n        this.y = y;\n        playerX = this.x;\n        playerY = this.y;\n        this.angle = angle;\n        this.radius = 20;\n        this.shiftAngle = 40;\n        this.v = 4;\n        this.attacking = 0;\n        this.attackCounter = 0;\n        this.controller = {\n            left: false,\n            right: false,\n            forward: false,\n            back: false\n        }\n        this.drawX = 0.2*document.documentElement.clientWidth;\n        this.drawY = 0.25*document.documentElement.clientHeight;\n    }\n\n    updateAngle(mouse) {\n        this.mouse = mouse;\n        if(mouse.x === this.drawX)\n            this.angle = 0;\n        else\n            this.angle = (mouse.x - this.drawX > 0)? Math.atan((mouse.y - this.drawY)/(mouse.x - this.drawX))*180.0/Math.PI: Math.atan((mouse.y - this.drawY)/(mouse.x - this.drawX))*180.0/Math.PI + 180;\n    }\n\n    move(direction) {\n        let atAngle = (angle) => {\n            this.x += this.v*Math.cos(angle*Math.PI/180.0);\n            this.y += this.v*Math.sin(angle*Math.PI/180.0);\n        };\n        switch(direction)\n        {\n            case \"forward\":\n                atAngle(this.angle);\n                break;\n            case \"back\":\n                atAngle(this.angle+180);\n                break;\n            case \"left\":\n                atAngle(this.angle-90);\n                break;\n            case \"right\":\n                atAngle(this.angle+90);\n                break;\n            default:\n                break;\n        }\n        playerX = this.x;\n        playerY = this.y;\n        this.updateAngle(this.mouse);\n    }\n\n    attack() {\n        this.attacking = 14;\n        this.attackCounter++;\n    }\n\n    draw(ctx) {\n        \n        if(this.controller.left)\n            this.move(\"left\");\n        if(this.controller.right)\n            this.move(\"right\");\n        if(this.controller.forward)\n            this.move(\"forward\");\n        if(this.controller.back)\n            this.move(\"back\");        \n\n        ctx.fillStyle = \"#ffd9b3\";\n\n        ctx.beginPath();\n        ctx.arc(this.drawX, this.drawY, this.radius, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n\n        let attackDistance = 7 - Math.abs(this.attacking-7);\n\n        if(this.attacking && this.attackCounter%2===0)\n            this.radius*=1+(attackDistance/20);\n\n        ctx.beginPath();\n        ctx.arc(this.drawX+this.radius*Math.cos((this.angle+this.shiftAngle)*Math.PI/180.0), this.drawY+this.radius*Math.sin((this.angle+this.shiftAngle)*Math.PI/180.0), this.radius/3.5, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n\n        if(this.attacking && this.attackCounter%2===1)\n            this.radius*=1+(attackDistance/20);\n        if(this.attacking && this.attackCounter%2===0)\n            this.radius/=1+(attackDistance/20);\n\n        ctx.beginPath();\n        ctx.arc(this.drawX+this.radius*Math.cos((this.angle-this.shiftAngle)*Math.PI/180.0), this.drawY+this.radius*Math.sin((this.angle-this.shiftAngle)*Math.PI/180.0), this.radius/3.5, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n\n        if(this.attacking && this.attackCounter%2===1)\n            this.radius/=1+(attackDistance/20);\n\n        if(this.attacking)\n            this.attacking--;\n    }\n\n    getPunchingHand() {\n        let attackDistance = 7 - Math.abs(this.attacking-7);\n        if(!this.attacking)\n            return null;\n        if(this.attackCounter%2 === 0)\n            return {\n                left: this.x + (1+(attackDistance/20))*this.radius*Math.cos((this.angle+this.shiftAngle)*Math.PI/180.0) - (1+(attackDistance/20))*this.radius,\n                right: this.x + (1+(attackDistance/20))*this.radius*Math.cos((this.angle+this.shiftAngle)*Math.PI/180.0) + (1+(attackDistance/20))*this.radius,\n                top: this.y + (1+(attackDistance/20))*this.radius*Math.sin((this.angle+this.shiftAngle)*Math.PI/180.0) - (1+(attackDistance/20))*this.radius,\n                bottom: this.y + (1+(attackDistance/20))*this.radius*Math.sin((this.angle+this.shiftAngle)*Math.PI/180.0) + (1+(attackDistance/20))*this.radius\n            };\n        else\n            return {\n                left: this.x + (1+(attackDistance/20))*this.radius*Math.cos((this.angle-this.shiftAngle)*Math.PI/180.0) - (1+(attackDistance/20))*this.radius,\n                right: this.x + (1+(attackDistance/20))*this.radius*Math.cos((this.angle-this.shiftAngle)*Math.PI/180.0) + (1+(attackDistance/20))*this.radius,\n                top: this.y + (1+(attackDistance/20))*this.radius*Math.sin((this.angle-this.shiftAngle)*Math.PI/180.0) - (1+(attackDistance/20))*this.radius,\n                bottom: this.y + (1+(attackDistance/20))*this.radius*Math.sin((this.angle-this.shiftAngle)*Math.PI/180.0) + (1+(attackDistance/20))*this.radius\n            }\n    }\n\n}\n\nclass Server {\n\n    constructor(data, x, y) {\n        if(data && data.hostname)\n            this.hostname = data.hostname;\n        if(data && data.area)\n            this.area = data.area;\n        if(data && data.version)\n            this.version = data.version;\n        if(data && data.uptime)\n            this.uptime = data.uptime;\n        this.x = x;\n        this.y = y;\n        this.width = 50;\n        this.height = 50;\n        this.health = 100;\n    }\n\n    getRect() {\n        return {\n            left: this.x,\n            top: this.y,\n            right: this.x+this.width,\n            bottom: this.y+this.height\n        };\n    }\n\n    draw(ctx) {\n        if(this.health > 0)\n        {\n            ctx.fillStyle = `rgb(${200 - this.health},100,100)`;\n            ctx.fillRect(this.x+shiftX(), this.y+shiftY(), this.width, this.height);\n            ctx.rect(this.x+shiftX(), this.y+shiftY(), this.width, this.height);\n            ctx.fillStyle=\"black\";\n            ctx.font = \"7px Arial\";\n            ctx.fillText(this.hostname, this.x+shiftX()+1,this.y+shiftY()+10);\n            ctx.fillText(this.area, this.x+shiftX()+1,this.y+shiftY()+21);\n            ctx.fillText(this.version, this.x+shiftX()+1,this.y+shiftY()+31);\n            ctx.fillText(this.uptime, this.x+shiftX()+1,this.y+shiftY()+41);\n        }\n    }\n\n}\n\nclass Canvas extends Component {\n\n    constructor() {\n        super();\n        \n        this.updateCanvas = this.updateCanvas.bind(this);\n    }\n\n    componentDidMount() {\n        this.ctx = this.refs.canvas.getContext('2d');\n        this.canvasRect = this.refs.canvas.getBoundingClientRect();\n        this.player = new Player(150, 150, 0);\n        this.servers = {};\n        this.numOfAddedServers = 0;\n        let data = (this.props.data)? this.props.data.sort((a,b) => (a.area > b.area) ? 1 : ((b.area > a.area) ? -1 : 0)): []; \n        let currentArea = (data && data.length > 0)? data[0].area: \"area\";\n        this.currentArea = currentArea;\n        let areaShift = 0;\n        this.healing = false;\n        /*eslint-disable */\n        for(let i=0; i<data.length; i++) {\n            const xWithoutShift = 10+60*Math.floor(i/4);\n            if(data[i].area != currentArea)\n            {\n                areaShift+=100;\n                currentArea = data[i].area;\n                i--;\n                continue;\n            }\n            this.servers[data[i].hostname] = new Server(data[i], xWithoutShift + areaShift, 10);\n            i++;\n            if(i<data.length)\n            {\n                if(data[i].area != currentArea)\n                {\n                    areaShift+=150;\n                    currentArea = data[i].area;\n                    i--;\n                    continue;\n                }\n                this.servers[data[i].hostname] = new Server(data[i], xWithoutShift + areaShift, 70);\n            }\n            i++;\n            if(i<data.length)\n            {\n                if(data[i].area != currentArea)\n                {\n                    areaShift+=150;\n                    currentArea = data[i].area;\n                    i--;\n                    continue;\n                }\n                this.servers[data[i].hostname] = new Server(data[i], xWithoutShift + areaShift, 130);\n            }\n            i++;\n            if(i<data.length)\n            {\n                if(data[i].area != currentArea)\n                {\n                    areaShift+=150;\n                    currentArea = data[i].area;\n                    i--;\n                    continue;\n                }\n                this.servers[data[i].hostname] = new Server(data[i], xWithoutShift + areaShift, 190);\n            }\n        }\n        /*eslint-enable */\n        this.mouse = {\n            x: this.x+1,\n            y: this.y\n        };\n        this.updateCanvas();\n    }\n\n    recreateServers() {\n        this.servers = {};\n        if(!this.props.data)\n            return;\n        this.numOfAddedServers = 0;\n        let data = this.props.data.sort((a,b) => (a.area > b.area) ? 1 : ((b.area > a.area) ? -1 : 0)); \n        let currentArea = (data && data.length > 0)? data[0].area: \"area\";\n        let areaShift = 0;\n        /*eslint-disable */\n        for(let i=0; i<data.length; i++) {\n            const xWithoutShift = 10+60*Math.floor(i/4);\n            if(data[i].area != currentArea)\n            {\n                areaShift+=100;\n                currentArea = data[i].area;\n                i--;\n                continue;\n            }\n            this.servers[data[i].hostname] = new Server(data[i], xWithoutShift + areaShift, 10);\n            i++;\n            if(i<data.length)\n            {\n                if(data[i].area != currentArea)\n                {\n                    areaShift+=150;\n                    currentArea = data[i].area;\n                    i--;\n                    continue;\n                }\n                this.servers[data[i].hostname] = new Server(data[i], xWithoutShift + areaShift, 70);\n            }\n            i++;\n            if(i<data.length)\n            {\n                if(data[i].area != currentArea)\n                {\n                    areaShift+=150;\n                    currentArea = data[i].area;\n                    i--;\n                    continue;\n                }\n                this.servers[data[i].hostname] = new Server(data[i], xWithoutShift + areaShift, 130);\n            }\n            i++;\n            if(i<data.length)\n            {\n                if(data[i].area != currentArea)\n                {\n                    areaShift+=150;\n                    currentArea = data[i].area;\n                    i--;\n                    continue;\n                }\n                this.servers[data[i].hostname] = new Server(data[i], xWithoutShift + areaShift, 190);\n            }\n        }\n    }\n\n    updateData(obj) \n    {\n        if(this.servers[obj.hostname])\n        {\n            this.servers[obj.hostname].area = obj.area;\n            this.servers[obj.hostname].version = obj.version;\n            this.servers[obj.hostname].uptime = obj.uptime;\n        }\n    }\n\n    deleteServer(hostname)\n    {\n        if(this.servers[hostname])\n            delete this.servers[hostname];\n    }\n\n    addServer(obj)\n    {\n        this.servers[obj.hostname] = new Server(obj, 10+60*this.numOfAddedServers, 250);\n        this.numOfAddedServers++;\n    }\n\n    updateCanvas() {\n        this.ctx.clearRect(0, 0, this.canvasRect.width, this.canvasRect.height);\n        let minServer = -1;\n        let minDistance = Number.MAX_SAFE_INTEGER;\n        const window = {\n            left: this.player.x - this.refs.canvas.innerWidth/2.0,\n            right: this.player.x + this.refs.canvas.innerWidth/2.0,\n            top: this.player.y - this.refs.canvas.innerHeight/2.0,\n            bottom: this.player.y + this.refs.canvas.innerHeight/2.0,\n        }\n        for(let server of Object.values(this.servers))\n        {\n            if(this.player.attacking)\n            {\n                if(intersectRect(this.player.getPunchingHand(), server.getRect()))\n                    server.health--;\n            }\n            if(server.health < 0)\n            {\n                this.props.destroyedServer(server);\n            }\n            if(intersectRect(window, server.getRect()))\n                server.draw(this.ctx);\n            if(Math.sqrt(Math.pow(server.x + server.width/2 - this.player.x, 2) + Math.pow(server.y + server.height/2 - this.player.y, 2)) < minDistance)\n            {\n                minServer = server;\n                minDistance = Math.sqrt(Math.pow(server.x + server.width/2 - this.player.x, 2) + Math.pow(server.y + server.height/2 - this.player.y, 2));\n            }\n        }\n        if(this.healing && minServer.health < 96)\n            minServer.health+=5;\n        if(this.healing && minServer.health < 100 && minServer.health > 95)\n            minServer.health++;\n\n        if(!this.healing && minServer.health < 50)\n        {\n            this.ctx.fillStyle=\"white\";\n            this.ctx.font = \"20px Arial\";\n            this.ctx.fillText(\"FIX NEAREST SERVER WITH F\", 10, 30);\n        }\n\n         // eslint-disable-next-line\n        if(minServer.area != this.currentArea)\n        {\n            this.currentArea = minServer.area;\n            this.refs.canvas.style.backgroundColor = '#'+Math.floor(Math.random()*16777215).toString(16);\n        }\n\n        this.player.draw(this.ctx);\n        requestAnimationFrame(this.updateCanvas);\n    }\n\n    render() {\n        return(\n            <canvas \n                ref=\"canvas\"\n                onMouseMove={\n                    e => {\n                        this.mouse = {\n                            x: e.clientX - this.canvasRect.x,\n                            y: e.clientY - this.canvasRect.y\n                        }\n                        this.player.updateAngle(this.mouse);\n                    }\n                }\n                width={this.props.width}\n                height={this.props.height}\n                style={{  \n                    backgroundColor: this.props.backgroundColor,\n                    transition: \"background-color 4s\"\n                }}/>\n        );\n    }\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.checkOrientation = this.checkOrientation.bind(this);\n        this.createGraphData = this.createGraphData.bind(this);\n        this.destroyedServer = this.destroyedServer.bind(this);\n\n        for(let i in data)\n        {\n            data[i].uptime = (data[i].uptime && !isNaN(parseInt(data[i].uptime)))? parseInt(data[i].uptime) : 0;\n        }\n\n        this.state = {\n            columnDefs: [\n                {headerName: \"Hostname\", field: \"hostname\", checkboxSelection: true},\n                {headerName: \"Area\", field: \"area\", editable: true},\n                {headerName: \"Version\", field: \"version\", editable: true},\n                {headerName: \"Uptime\", field: \"uptime\", editable: true}\n            ],\n            data: data,\n            orientation: \"h\",\n            graph_revision: 0,\n            authenticated: 0,\n            curUser: null,\n            accessCode: \"\",\n            fieldEditerIsOpen: false,\n            fieldRemoverIsOpen: false,\n            dataEditorIsOpen: false,\n            dataRemoverIsOpen: false,\n            selectorIsOpen: false,\n            shareCodeIsOpen: false,\n            joinCodeIsOpen: false,\n            selectorTab: \"hostname\",\n            cachedExpression: \"\",\n            dataIndex: -1\n        };\n\n        /*eslint-disable */\n        window.addEventListener(\"keydown\", e => {\n            if(document.activeElement.tagName === \"BODY\")\n            {\n                switch(e.keyCode)\n                {\n                    case 37:\n                    case 65:\n                        this.refs.canvasComponent.player.controller.left = true;\n                        break;\n                    case 38:\n                    case 87:\n                        this.refs.canvasComponent.player.controller.forward = true;\n                        break;\n                    case 39:\n                    case 68:\n                        this.refs.canvasComponent.player.controller.right = true;\n                        break;\n                    case 40:\n                    case 83:\n                        this.refs.canvasComponent.player.controller.back = true;\n                        break;\n                    case 70:\n                        this.refs.canvasComponent.healing = true;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n        window.addEventListener(\"keyup\", e => {\n            if(document.activeElement.tagName === \"BODY\")\n            {\n                switch(e.keyCode)\n                {\n                    case 37:\n                    case 65:\n                        this.refs.canvasComponent.player.controller.left = false;\n                        break;\n                    case 38:\n                    case 87:\n                        this.refs.canvasComponent.player.controller.forward = false;\n                        break;\n                    case 39:\n                    case 68:\n                        this.refs.canvasComponent.player.controller.right = false;\n                        break;\n                    case 40:\n                    case 83:\n                        this.refs.canvasComponent.player.controller.back = false;\n                        break;\n                    case 32:\n                        this.refs.canvasComponent.player.controller.left = false;\n                        this.refs.canvasComponent.player.controller.right = false;\n                        this.refs.canvasComponent.player.controller.forward = false;\n                        this.refs.canvasComponent.player.controller.back = false;\n                        this.refs.canvasComponent.healing = false;\n                        break;\n                    case 70:\n                        this.refs.canvasComponent.healing = false;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n        /*eslint-enable */\n        window.addEventListener(\"click\", e => {\n            if(document.activeElement.tagName === \"BODY\")\n                this.refs.canvasComponent.player.attack();\n        });\n    }\n\n    componentDidMount() {\n        this.checkOrientation();\n        window.addEventListener(\"resize\", this.checkOrientation);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.checkOrientation);\n    }\n\n    checkOrientation() {\n        if(window.innerHeight > window.innerWidth)\n            this.setState({orientation: \"v\"});\n        else\n            this.setState({orientation: \"h\"});\n    }\n\n    getIndexByHostname(hostname) {\n        if(!this.state.data) return -1;\n        for(let i = 0; i < this.state.data.length; i++)\n            if(hostname === this.state.data[i].hostname)\n                return i;\n        return -1;\n    }\n\n    createGraphData(data) {\n        if(!data) return null;\n        let xs = [];\n        let ys = [];\n        let ys2 = [];\n        for(let server of data)\n        {\n            if(server.area)\n                if(!xs.includes(server.area))\n                {\n                    xs.push(server.area);\n                    ys[xs.indexOf(server.area)] = 1;\n                    ys2[xs.indexOf(server.area)] = (isNaN(parseInt(server.uptime)))? 0 : parseInt(server.uptime);\n                }\n                else\n                {\n                    ys2[xs.indexOf(server.area)] += (isNaN(parseInt(server.uptime)))? 0 : parseInt(server.uptime);\n                    ys[xs.indexOf(server.area)]++;\n                }\n        }\n        console.log(\"START\");\n        for(let i = 0; i < ys.length; i++)\n        {\n            console.log(xs[i], ys2[i],\"/\",ys[i]);\n            ys2[i] /= ys[i];\n        }\n        console.log(\"END\");\n        for(let i = 1; i < ys.length; i++)\n            for(let j = 0; j < i; j++) {\n                if(ys[i] > ys[j]) {\n                    let tempX = xs.splice(i, 1)[0];\n                    let tempY = ys.splice(i, 1)[0];\n                    let tempY2 = ys2.splice(i, 1)[0];\n                    xs.splice(j,0,tempX);\n                    ys.splice(j,0,tempY);\n                    ys2.splice(j,0,tempY2);\n                }\n            }\n        return [{type:\"bar\", x: xs, y: ys2, name: \"Average Uptime\", marker:{color:\"blue\"}},\n                {type:\"bar\", x: xs, y: ys, name: \"Count\", marker:{color:\"green\"}}];\n    }\n\n    destroyedServer(s) {\n        let dataCopy = (this.state.data)? [...this.state.data]: [];\n        let hostname = s.hostname;\n        if(this.getIndexByHostname(hostname) >= 0)\n        {\n            dataCopy.splice(this.getIndexByHostname(hostname), 1);\n            this.refs.canvasComponent.deleteServer(hostname);\n        }\n        this.setState({ data: dataCopy, graph_revision: this.state.graph_revision + 1 });\n    }\n\n    render() {\n        return (this.state.orientation === \"h\" && !navigator.userAgent.match(/iphone|android|blackberry/ig))? (\n            <>\n                <Navbar color=\"dark\" dark expand>\n                    <NavbarBrand style={{ cursor: \"default\", fontSize: \"30px\", userSelect: \"none\", color: \"red\" }}>Server Data</NavbarBrand>\n                    <Nav className=\"ml-auto\" navbar\n                        style={{\n                            fontSize: \"15px\",\n                            userSelect: \"none\"\n                        }}\n                        >\n                        <UncontrolledDropdown nav inNavbar>\n                            <DropdownToggle nav caret>Field</DropdownToggle>\n                            <DropdownMenu style={{fontSize: \"13px\"}}>\n                                <DropdownItem onClick={() => {\n                                    this.setState({ fieldEditerIsOpen: true });\n                                }}>\n                                    Edit\n                                </DropdownItem>\n                                <DropdownItem onClick={() => {\n                                    this.setState({ fieldRemoverIsOpen: true });\n                                }}>\n                                    Remove\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <UncontrolledDropdown nav inNavbar>\n                            <DropdownToggle nav caret>Data</DropdownToggle>\n                            <DropdownMenu style={{fontSize: \"13px\"}}>\n                                <DropdownItem onClick={() => {\n                                    this.setState({ dataEditorIsOpen: true, dataIndex: -1 });\n                                }}>\n                                    New Server\n                                </DropdownItem>\n                                <DropdownItem onClick={() => {\n                                    this.setState({ dataRemoverIsOpen: true });\n                                }}>\n                                    Remove Server\n                                </DropdownItem>\n                                <DropdownItem onClick={() => {\n                                    this.setState({ dataEditorIsOpen: true });\n                                }}>\n                                    Edit Selected\n                                </DropdownItem>\n                                <DropdownItem onClick={() => {\n                                    let dataCopy = (this.state.data)? [...this.state.data]: [];\n                                    let selectedData = this.gridApi.getSelectedRows();\n\n                                    for(let d of selectedData)\n                                    {\n                                        this.refs.canvasComponent.deleteServer(d.hostname);\n                                        dataCopy.splice(dataCopy.indexOf(d), 1);\n                                    }\n\n                                    this.setState({ data: dataCopy });\n                                }}>\n                                    Remove Selected\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <UncontrolledDropdown nav inNavbar style={{ borderRight: \"1px solid red\" }}>\n                            <DropdownToggle nav caret>Select</DropdownToggle>\n                            <DropdownMenu style={{fontSize: \"13px\"}}>\n                                <DropdownItem onClick={() => {\n                                        this.setState({ selectorIsOpen: true });\n                                    }}>\n                                    Open Selector\n                                </DropdownItem>\n                                <DropdownItem onClick={() => {\n                                    this.gridApi.deselectAll();\n                                }}>\n                                    Deselect All\n                                </DropdownItem>\n                                <DropdownItem disabled>\n                                    {\n                                        (() => {\n                                            if(this.gridApi)\n                                                return this.gridApi.getSelectedRows().length+\" Rows Selected\";\n                                            return \"0 Rows Selected\"\n                                        })()\n                                    }\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <NavItem>\n                            <NavLink className=\"nav-link\" onClick={() => {\n                                if(this.state.authenticated === 1)\n                                {\n                                    firebase.database().ref(\"/\"+this.state.curUser.uid).once(\"value\", snap => {\n                                        firebase.database().ref('/'+snap.val()).once(\"value\", snapshot => {\n                                            this.setState({ data: snapshot.val(), graph_revision: this.state.graph_revision + 1 });\n                                            this.refs.canvasComponent.recreateServers();\n                                        });\n                                    });\n                                }\n                                else\n                                    alert(\"Sign In To Pull Data\");\n                                \n                            }}>Pull</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"nav-link\" onClick={() => {\n                                if(this.state.authenticated === 1)\n                                {\n                                    firebase.database().ref(\"/\"+this.state.curUser.uid).once(\"value\", snap => {\n                                        firebase.database().ref('/'+snap.val()).set(this.state.data);\n                                    });\n                                }\n                                else\n                                    alert(\"Sign In Push Data\");\n                                \n                            }}>Push</NavLink>\n                        </NavItem>\n                        <UncontrolledDropdown nav inNavbar style={{ borderRight: \"1px solid red\" }}>\n                            <DropdownToggle nav caret>Share</DropdownToggle>\n                            <DropdownMenu style={{fontSize: \"13px\"}}>\n                                <DropdownItem onClick={() => {\n                                        this.setState({ shareCodeIsOpen: true });\n                                    }}>\n                                    Share\n                                </DropdownItem>\n                                <DropdownItem onClick={() => {\n                                    this.setState({ joinCodeIsOpen: true });\n                                }}>\n                                    Join\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <UncontrolledDropdown nav inNavbar>\n                            <DropdownToggle nav caret>Import</DropdownToggle>\n                            <DropdownMenu style={{fontSize: \"13px\"}}>\n                                <DropdownItem onClick={() => {\n                                    let fileSelector = document.createElement(\"input\");\n                                    fileSelector.setAttribute(\"type\", \"file\");\n                                    fileSelector.setAttribute(\"accept\", \".json\");\n                                    fileSelector.onchange = event => {\n                                        let fileReader = new FileReader();\n                                        fileReader.onload = e => {\n                                            let fileContents = e.target.result;\n                                            this.setState({ data: JSON.parse(fileContents) });\n                                            this.refs.canvasComponent.recreateServers();\n                                        }\n                                        fileReader.readAsText(fileSelector.files[0]);\n                                    };\n                                    document.body.appendChild(fileSelector);\n                                    fileSelector.click();\n                                    document.body.removeChild(fileSelector);\n                                }}>\n                                    JSON\n                                </DropdownItem>\n                                <DropdownItem onClick={() => {\n                                    let fileSelector = document.createElement(\"input\");\n                                    fileSelector.setAttribute(\"type\", \"file\");\n                                    fileSelector.setAttribute(\"accept\", \".csv\");\n                                    fileSelector.onchange = event => {\n                                        let fileReader = new FileReader();\n                                        fileReader.onload = e => {\n                                            let fileContents = e.target.result;\n                                            csv.parse(fileContents.replace(/\"/g, \"\"), (err, csvData) => {\n                                                let jsonData = [];\n                                                let keys = [];\n                                                for(let i = 0; i < csvData[0].length; i++)\n                                                {\n                                                    keys.push(csvData[0][i].replace(/[^0-9a-z]/gi, '').toLowerCase());\n                                                }\n                                                for(let i = 1; i < csvData.length; i++)\n                                                {\n                                                    let obj = {};\n                                                    for(let j = 0; j < keys.length; j++)\n                                                    {\n                                                        obj[keys[j]] = csvData[i][j]; \n                                                    }\n                                                    jsonData.push(obj);\n                                                }\n                                                this.setState({ data: jsonData });\n                                                this.refs.canvasComponent.recreateServers();\n                                            });\n                                            \n                                        }\n                                        fileReader.readAsBinaryString(fileSelector.files[0]);\n                                    };\n                                    document.body.appendChild(fileSelector);\n                                    fileSelector.click();\n                                    document.body.removeChild(fileSelector);\n                                }}>\n                                    CSV\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <UncontrolledDropdown nav inNavbar style={{ borderRight: \"1px solid red\" }}>\n                            <DropdownToggle nav caret>Export</DropdownToggle>\n                            <DropdownMenu style={{fontSize: \"13px\"}}>\n                                <DropdownItem onClick={() => {\n                                    let e = document.createElement('a');\n                                    let blob = new Blob([JSON.stringify(this.state.data)], {type: \"text/json;charset=utf-8\"});\n                                    let url = URL.createObjectURL(blob);\n                                    e.setAttribute('href', url);\n                                    e.setAttribute(\"download\", \"ServerData.json\");\n                                    e.style.display = 'none';\n                                    document.body.appendChild(e);\n                                    e.click();\n                                    document.body.removeChild(e);\n                                }}>\n                                    JSON\n                                </DropdownItem>\n                                <DropdownItem onClick={() => {\n                                    this.gridApi.exportDataAsCsv({fileName: \"ServerData.csv\"});\n                                }}>\n                                    CSV\n                                </DropdownItem>\n                                <DropdownItem onClick={() => {\n                                    this.refs.plot.el.getElementsByClassName('modebar')[0].getElementsByClassName('modebar-btn')[0].click();\n                                }}>\n                                    Graph\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <NavItem>\n                            <NavLink className=\"nav-link\" style={{ borderRight: \"1px solid red\" }} onClick={() => {\n                                this.gridApi.refreshCells();\n                                this.refs.canvasComponent.recreateServers();\n                                this.setState({ graph_revision: this.state.graph_revision + 1 });\n                            }}>Refresh</NavLink>\n                        </NavItem>\n                        <UncontrolledDropdown nav inNavbar style={{\n                            marginRight: 70,\n                            width: 75\n                        }}>\n                            <DropdownToggle nav caret>User</DropdownToggle>\n                            <DropdownMenu style={{fontSize: \"15px\", overflow: \"hidden\", width: 150, textAlign: \"center\", margin: 0, padding: 0}}>\n                                {\n                                    (() => {\n                                        if(this.state.authenticated === 0)\n                                            return (\n                                                <DropdownItem onClick={() => {\n                                                        const provider = new firebase.auth.GoogleAuthProvider();\n                                                        firebase.auth().signInWithPopup(provider).then(result => {\n                                                            this.setState({ curUser: result.user, authenticated: 1 });\n                                                            firebase.database().ref(\"/\"+this.state.curUser.uid).once(\"value\", snap => {\n                                                                if(!snap.val())\n                                                                {\n                                                                    let r = Math.random().toString(36).substring(2);\n                                                                    firebase.database().ref(\"/\"+this.state.curUser.uid).set(r);\n                                                                    firebase.database().ref(\"/\"+r).set(this.state.data);\n                                                                    this.setState({ accessCode: r });\n                                                                    firebase.database().ref(\"/\"+this.state.curUser.uid).on(\"value\", snap => {\n                                                                        this.setState({ accessCode: snap.val() });\n                                                                    });\n                                                                }\n                                                                else\n                                                                {\n                                                                    firebase.database().ref('/'+snap.val()).once(\"value\", snapshot => {\n                                                                        this.setState({ data: snapshot.val(), graph_revision: this.state.graph_revision + 1 });\n                                                                        this.refs.canvasComponent.recreateServers();\n                                                                    });\n                                                                    firebase.database().ref(\"/\"+this.state.curUser.uid).on(\"value\", snap => {\n                                                                        this.setState({ accessCode: snap.val() });\n                                                                    });\n                                                                }\n                                                            });\n                                                        }).catch(err => {\n                                                            \n                                                        });\n                                                    }}>\n                                                    Sign In\n                                                </DropdownItem>\n                                            );\n                                            else \n                                                return (\n                                                    <>\n                                                        <img src={this.state.curUser.photoURL} alt=\"USER\" style={{ \n                                                            borderRadius: 100,\n                                                            width: 50,\n                                                            height: 50,\n                                                            display: \"block\",\n                                                            margin: \"auto\"\n                                                         }} />\n                                                        <DropdownItem disabled>\n                                                            {this.state.curUser.displayName}\n                                                        </DropdownItem>\n                                                        <DropdownItem disabled>\n                                                            {this.state.curUser.email}\n                                                        </DropdownItem>\n                                                        <DropdownItem onClick={() => {\n                                                            firebase.auth().signOut();\n                                                            this.setState({ curUser: null, authenticated: 0, accessCode: null });\n                                                        }}>\n                                                            Sign Out\n                                                        </DropdownItem>\n                                                    </>\n                                                );\n                                    })()\n                                }\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    </Nav>\n                </Navbar>\n                <div\n                    style={{\n                        width: \"100vw\",\n                        height: window.innerHeight - 62,\n                        position: \"absolute\",\n                        bottom: 0,\n                        left: 0\n                    }}\n                >\n                    <div \n                        className=\"ag-theme-dark ag-grid\"\n                        style={{ \n                            width: '60vw',\n                            position: \"absolute\",\n                            bottom: 0,\n                            left: 0,\n                            top: 0\n                        }}\n                        >\n                        <AgGridReact\n                            enableSorting={true}\n                            enableFilter={true}\n                            rowSelection=\"multiple\"\n                            rowDragManaged={true}\n                            columnDefs={this.state.columnDefs}\n                            rowData={this.state.data}\n                            animateRows={true}\n                            enableCellChangeFlash={true}\n                            getRowNodeId={ data => data.hostname }\n                            onGridReady={\n                                params => {\n                                    this.gridApi = params.api;\n                                    this.columnApi = params.columnApi;\n                                }\n                            }\n                            onRowSelected={\n                                e => {\n                                    let shouldRun = false;\n                                    let selectedData = this.gridApi.getSelectedRows();\n                                    for(let d of selectedData)\n                                    {\n                                        if(d.hostname === e.data.hostname)\n                                            shouldRun = true;\n                                    }\n                                    if(shouldRun)\n                                    {\n                                        // eslint-disable-next-line\n                                        this.refs.canvasComponent.player.x = this.refs.canvasComponent.servers[e.data.hostname].x + this.refs.canvasComponent.servers[e.data.hostname].width/2;\n                                        // eslint-disable-next-line\n                                        this.refs.canvasComponent.player.y = this.refs.canvasComponent.servers[e.data.hostname].y + this.refs.canvasComponent.servers[e.data.hostname].height/2;\n                                        playerX = this.refs.canvasComponent.player.x;\n                                        playerY = this.refs.canvasComponent.player.y;\n                                        this.setState({ dataIndex: this.getIndexByHostname(e.data.hostname), graph_revision: this.state.graph_revision+1 });\n                                    }\n                                    else\n                                        this.setState({graph_revision: this.state.graph_revision+1});\n                                }\n                            }\n                            onCellEditingStopped={\n                                event => {\n                                    this.setState({graph_revision:this.state.graph_revision+1});\n                                    this.refs.canvasComponent.updateData(event.data);\n                                }\n                            }\n                            >\n                        </AgGridReact>\n                    </div>\n                    <div>\n                        <div\n                            style={{\n                                position: \"absolute\",\n                                width:\"40vw\",\n                                height: (window.innerHeight - 62) / 2.0,\n                                bottom: 0,\n                                right: 0,\n                            }}\n                            className=\"Graph\"\n                            >\n                            <Plot\n                                revision={this.state.graph_revision}\n                                data={this.createGraphData((this.gridApi && this.gridApi.getSelectedRows().length > 0)? this.gridApi.getSelectedRows() : this.state.data)}\n                                responsive={true}\n                                style={{ \n                                    position: \"absolute\",\n                                    top: 0,\n                                    bottom: 0,\n                                    left: 0,\n                                    right: 0,\n                                    userSelect: \"none\"\n                                }}\n                                ref=\"plot\"\n                                layout={ {title: 'Details Depending on Area'} }\n                            />\n                        </div>\n                        <div\n                            style={{\n                                position: \"absolute\",\n                                width:\"40vw\",\n                                height:(window.innerHeight - 62) / 2.0,\n                                top: 0,\n                                right: 0\n                            }}\n                            className=\"Canvas\"\n                            >\n                            <Canvas \n                                width={`${0.4*document.documentElement.clientWidth}px`}\n                                height={(window.innerHeight - 62) / 2.0}\n                                backgroundColor=\"green\"\n                                data={this.state.data}\n                                ref=\"canvasComponent\"\n                                destroyedServer={this.destroyedServer}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <Modal size=\"lg\" isOpen={this.state.dataEditorIsOpen}>\n                    <ModalHeader>Server Editor</ModalHeader>\n                    <Form onSubmit={(e) =>\n                    {\n                        e.preventDefault();\n\n                        let hostname = document.getElementById(\"edit_hostname\").value;\n                        let area = document.getElementById(\"edit_area\").value;\n                        let version = document.getElementById(\"edit_version\").value;\n                        let uptime = document.getElementById(\"edit_uptime\").value;\n\n                        let obj = {\n                            hostname: hostname,\n                            area: area,\n                            version: version,\n                            uptime: uptime\n                        }\n\n                        let dataCopy = (this.state.data)? [...this.state.data]: [];\n                        if(this.getIndexByHostname(hostname) >= 0)\n                            dataCopy[this.getIndexByHostname(hostname)] = obj;\n                        else\n                        {\n                            dataCopy.push(obj);\n                            this.refs.canvasComponent.addServer(obj);\n                        }\n                        this.setState({ data: dataCopy, dataEditorIsOpen: false });\n                        this.gridApi.refreshCells();\n                    }}>\n                        <ModalBody>\n                            <FormGroup>\n                                <Label>Hostname</Label>\n                                <Input type=\"text\" id=\"edit_hostname\" defaultValue={(this.state.dataIndex >= 0 && this.state.data[this.state.dataIndex])? this.state.data[this.state.dataIndex].hostname: \"\"}></Input>                   \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Area</Label>\n                                <Input type=\"text\" id=\"edit_area\" defaultValue={(this.state.dataIndex >= 0 && this.state.data[this.state.dataIndex])? this.state.data[this.state.dataIndex].area: \"\"}></Input>                                \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Version</Label>\n                                <Input type=\"text\" id=\"edit_version\" defaultValue={(this.state.dataIndex >= 0 && this.state.data[this.state.dataIndex])? this.state.data[this.state.dataIndex].version: \"\"}></Input>                                \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Uptime</Label>\n                                <Input type=\"text\" id=\"edit_uptime\" defaultValue={(this.state.dataIndex >= 0 && this.state.data[this.state.dataIndex])? this.state.data[this.state.dataIndex].uptime: \"\"}></Input>                                \n                            </FormGroup>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button type=\"reset\" color=\"light\" onClick={(e) => { this.setState({ dataEditorIsOpen: false }); }}>Cancel</Button>\n                            <Button type=\"submit\" color=\"dark\">Edit</Button>\n                        </ModalFooter>\n                    </Form>\n                </Modal>\n\n                <Modal size=\"lg\" isOpen={this.state.dataRemoverIsOpen}>\n                    <ModalHeader>Delete Server</ModalHeader>\n                    <Form onSubmit={(e) => {\n                        e.preventDefault();\n                        let dataCopy = (this.state.data)? [...this.state.data]: [];\n                        let hostname = document.getElementById(\"edit_hostname\").value;\n                        if(this.getIndexByHostname(hostname) >= 0)\n                        {\n                            dataCopy.splice(this.getIndexByHostname(hostname), 1);\n                            this.refs.canvasComponent.deleteServer(hostname);\n                        }\n                        this.setState({ data: dataCopy, dataRemoverIsOpen: false });\n                    }}>\n                        <ModalBody>\n                            <FormGroup>\n                                <Label>Hostname</Label>\n                                <Input type=\"text\" id=\"edit_hostname\" defaultValue={(this.state.dataIndex >= 0 && this.state.data[this.state.dataIndex])? this.state.data[this.state.dataIndex].hostname: \"\"}></Input>                   \n                            </FormGroup>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button type=\"reset\" color=\"light\" onClick={(e) => { this.setState({ dataRemoverIsOpen: false }); }}>Cancel</Button>\n                            <Button type=\"submit\" color=\"danger\">Delete</Button>\n                        </ModalFooter>\n                    </Form>\n                </Modal>\n\n                <Modal size=\"lg\" isOpen={this.state.fieldEditerIsOpen}>\n                    <ModalHeader>Field Editor</ModalHeader>\n                    <Form onSubmit={(e) => {\n                        e.preventDefault();\n                        let dataCopy = (this.state.data)? [...this.state.data]: [];\n                        let hostnames = document.getElementById(\"edit_hostname\").value.replace(/ /g, \"\").split(\",\");\n                        let key = document.getElementById(\"edit_key\").value.toLowerCase();\n                        let value = document.getElementById(\"edit_value\").value;\n                        if(key === \"hostname\")\n                            alert(\"Cannot change hostname\");\n                        else\n                            for(let hostname of hostnames)\n                            {\n                                dataCopy[this.getIndexByHostname(hostname)][key] = value;\n                                this.refs.canvasComponent.updateData(dataCopy[this.getIndexByHostname(hostname)]);\n                            }\n                        this.setState({ data: dataCopy, fieldEditerIsOpen: false });\n                        this.gridApi.refreshCells();\n                    }}>\n                        <ModalBody>\n                            <FormGroup>\n                                <Label>Hostname</Label>\n                                <Input type=\"text\" id=\"edit_hostname\" defaultValue={(() => {\n                                    if(this.gridApi && this.gridApi.getSelectedRows().length > 0)\n                                    {\n                                        let arr = [];\n                                        for(let obj of this.gridApi.getSelectedRows())\n                                        {\n                                            arr.push(obj.hostname);\n                                        }\n                                        return arr.join(\", \");\n                                    }\n                                    return \"\";\n                                })()}></Input>                   \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Field Name</Label>\n                                <Input type=\"text\" id=\"edit_key\"></Input>                   \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Value</Label>\n                                <Input type=\"text\" id=\"edit_value\"></Input>                   \n                            </FormGroup>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button type=\"reset\" color=\"light\" onClick={(e) => { this.setState({ fieldEditerIsOpen: false }); }}>Cancel</Button>\n                            <Button type=\"submit\" color=\"dark\">Edit</Button>\n                        </ModalFooter>\n                    </Form>\n                </Modal>\n\n                <Modal size=\"lg\" isOpen={this.state.fieldRemoverIsOpen}>\n                    <ModalHeader>Field Remover</ModalHeader>\n                    <Form onSubmit={(e) => {\n                        e.preventDefault();\n                        let dataCopy = (this.state.data)? [...this.state.data]: [];\n                        let hostnames = document.getElementById(\"edit_hostname\").value.replace(/ /g, \"\").split(\",\");\n                        let key = document.getElementById(\"edit_key\").value.toLowerCase();\n                        if(key === \"hostname\")\n                            alert(\"Cannot change hostname\");\n                        else\n                            for(let hostname of hostnames)\n                            {\n                                dataCopy[this.getIndexByHostname(hostname)][key] = \"\";\n                                this.refs.canvasComponent.updateData(dataCopy[this.getIndexByHostname(hostname)]);\n                            }\n                        this.setState({ data: dataCopy, fieldRemoverIsOpen: false });\n                        this.gridApi.refreshCells();\n                    }}>\n                        <ModalBody>\n                            <FormGroup>\n                                <Label>Hostname</Label>\n                                <Input type=\"text\" id=\"edit_hostname\" defaultValue={(() => {\n                                    if(this.gridApi && this.gridApi.getSelectedRows().length > 0)\n                                    {\n                                        let arr = [];\n                                        for(let obj of this.gridApi.getSelectedRows())\n                                        {\n                                            arr.push(obj.hostname);\n                                        }\n                                        return arr.join(\", \");\n                                    }\n                                    return \"\";\n                                })()}></Input>                   \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Field Name</Label>\n                                <Input type=\"text\" id=\"edit_key\"></Input>                   \n                            </FormGroup>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button type=\"reset\" color=\"light\" onClick={(e) => { this.setState({ fieldRemoverIsOpen: false }); }}>Cancel</Button>\n                            <Button type=\"submit\" color=\"danger\">Remove</Button>\n                        </ModalFooter>\n                    </Form>\n                </Modal>\n\n                <Modal size=\"lg\" isOpen={this.state.selectorIsOpen}>\n                    <ModalHeader>Selector</ModalHeader>\n                    <Form onSubmit={(e) => {\n                        e.preventDefault();\n                        this.gridApi.deselectAll();\n                        if(this.state.selectorTab === \"hostname\")\n                        {\n                            let hostnames = document.getElementById(\"edit_hostname\").value.replace(/ /g, \"\").split(\",\");\n                            this.gridApi.forEachNode(\n                                node => {\n                                    if(hostnames.includes(node.data.hostname))\n                                    {\n                                        node.setSelected(true);\n                                    }\n                                }\n                            );\n                        }\n                        else\n                        {\n                            let expression = document.getElementById(\"edit_expression\").value;\n                            try {\n                                this.gridApi.forEachNode(\n                                    node => {\n                                        let replacedExpression = expression.replace(/{hostname}/g, '\"'+node.data.hostname+'\"').replace(/{area}/g, '\"'+node.data.area+'\"').replace(/{version}/g, node.data.version).replace(/{uptime}/g, '\"'+node.data.uptime+'\"');\n                                        // eslint-disable-next-line\n                                        if(eval(replacedExpression))\n                                        {\n                                            node.setSelected(true);\n                                        }\n                                    }    \n                                );\n                            }\n                            catch(e) {\n                                alert(\"Error in Boolean Expression!\");\n                            }\n                            this.setState({cachedExpression: expression});\n                        }\n                        this.setState({ selectorIsOpen: false });\n                    }}>\n                        <ModalBody>\n                            <Nav tabs>\n                                <NavItem>\n                                    <NavLink onClick={() => { this.setState({ selectorTab: \"hostname\" }) }}>By Hostname</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink onClick={() => { this.setState({ selectorTab: \"expression\" }) }}>By Expression</NavLink>\n                                </NavItem>\n                            </Nav>\n                            <TabContent activeTab={this.state.selectorTab}>\n                                <TabPane tabId=\"hostname\">\n                                    <FormGroup>\n                                        <Label>Hostname</Label>\n                                        <Input type=\"text\" id=\"edit_hostname\" defaultValue={(() => {\n                                            if(this.gridApi && this.gridApi.getSelectedRows().length > 0)\n                                            {\n                                                let arr = [];\n                                                for(let obj of this.gridApi.getSelectedRows())\n                                                {\n                                                    arr.push(obj.hostname);\n                                                }\n                                                return arr.join(\", \");\n                                            }\n                                            return \"\";\n                                        })()}></Input>                   \n                                    </FormGroup>\n                                </TabPane>\n                                <TabPane tabId=\"expression\">\n                                    <FormGroup>\n                                        <Label>Expression</Label>\n                                        <FormText>Put a boolean here that will be evaluated to determine which nodes to select. Use variables like {\"{\"}hostname{\"}\"}, {\"{\"}area{\"}\"}, {\"{\"}version{\"}\"}, and {\"{\"}uptime{\"}\"} to access the respective values.<br /><span style={{color: \"red\", fontWeight: \"bold\", fontStyle: \"underline\"}}>WARNING</span>: Selecting too many items may cause the page to lag or crash <br /> Examples: <br />{\"{\"}area{\"}\"} == '1' <br /> {\"{\"}uptime{\"} <\"} 10</FormText>\n                                        <Input type=\"text\" id=\"edit_expression\" defaultValue={(() => {\n                                            if(this.state.cachedExpression)\n                                            {\n                                                return this.state.cachedExpression;\n                                            }\n                                            if(this.gridApi && this.gridApi.getSelectedRows().length > 0)\n                                            {\n                                                let arr = [];\n                                                for(let obj of this.gridApi.getSelectedRows())\n                                                {\n                                                    arr.push(obj.hostname);\n                                                }\n                                                return \"['\"+arr.join(\"', '\")+\"'].includes({hostname})\";\n                                            }\n                                            return \"\";\n                                        })()}></Input>                   \n                                    </FormGroup>\n                                </TabPane>\n                            </TabContent>\n                            \n                        </ModalBody>\n                        <ModalFooter>\n                            <Button type=\"reset\" color=\"light\" onClick={(e) => { this.setState({ selectorIsOpen: false }); }}>Cancel</Button>\n                            <Button type=\"submit\" color=\"primary\">Select</Button>\n                        </ModalFooter>\n                    </Form>\n                </Modal>\n\n                <Modal size=\"lg\" isOpen={this.state.joinCodeIsOpen}>\n                    <ModalHeader>Join Code</ModalHeader>\n                    <Form onSubmit={(e) => {\n                        e.preventDefault();\n                        if(this.state.authenticated === 1)\n                        {\n                            let code = document.getElementById(\"edit_code\").value;\n                            firebase.database().ref(\"/\"+this.state.curUser.uid).set(code);\n                            this.setState({ joinCodeIsOpen: false });\n                            firebase.database().ref(\"/\"+this.state.curUser.uid).once(\"value\", snap => {\n                                firebase.database().ref('/'+snap.val()).once(\"value\", snapshot => {\n                                    this.setState({ data: snapshot.val(), graph_revision: this.state.graph_revision + 1 });\n                                    this.refs.canvasComponent.recreateServers();\n                                });\n                            });\n                        }\n                        else\n                            alert(\"Sign In To Join\");\n                    }}>\n                        <ModalBody>\n                            <FormGroup>\n                                <Label>Code</Label>\n                                <Input type=\"text\" id=\"edit_code\" />                   \n                            </FormGroup>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button type=\"reset\" color=\"light\" onClick={(e) => { this.setState({ joinCodeIsOpen: false }); }}>Cancel</Button>\n                            <Button type=\"submit\" color=\"primary\">Join</Button>\n                        </ModalFooter>\n                    </Form>\n                </Modal>\n\n                <Modal size=\"lg\" isOpen={this.state.shareCodeIsOpen}>\n                    <ModalHeader>Join Code</ModalHeader>\n                    <ModalBody>\n                        {(() => {\n                            if(this.state.authenticated === 1)\n                                return this.state.accessCode;\n                            else \n                                return \"Please Sign In To Share\";\n                        })()}\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button type=\"submit\" color=\"primary\" onClick={(e) => { this.setState({ shareCodeIsOpen: false }); }}>Ok</Button>\n                    </ModalFooter>\n                </Modal>\n\n            </>\n        ) : (\n            <div \n                    className=\"ag-theme-dark ag-grid\"\n                    style={{ \n                        height: '100vh', \n                        width: '100vw' \n                    }}\n                    >\n                    <AgGridReact\n                        enableSorting={true}\n                        enableFilter={true}\n                        rowSelection=\"multiple\"\n                        rowDragManaged={true}\n                        columnDefs={this.state.columnDefs}\n                        rowData={this.state.data}\n                        onGridReady={\n                            params => {\n                                this.gridApi = params.api;\n                                this.columnApi = params.columnApi;\n                            }\n                        }>\n                    </AgGridReact>\n                </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import './bootstrap/bootstrap.min.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}